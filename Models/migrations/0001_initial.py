# Generated by Django 4.2.4 on 2023-08-18 19:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='API',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('API_key', models.CharField(max_length=256, verbose_name='API ключ')),
                ('login', models.CharField(max_length=256, verbose_name='Логин')),
                ('password', models.CharField(max_length=64, verbose_name='Пароль')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название категории')),
                ('parents', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent', to='Models.category', verbose_name='Категория подкатегории')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=32, verbose_name='Вопрос в разделе FAQ')),
                ('answer', models.CharField(max_length=64, verbose_name='Ответ на вопрос')),
            ],
        ),
        migrations.CreateModel(
            name='GroupAndChennel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название группы/чата')),
                ('chat_id', models.IntegerField(verbose_name='ID группы/чата')),
                ('invite_link', models.CharField(max_length=64, verbose_name='Приглашение в чат')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=1024, verbose_name='')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(blank=True, null=True, verbose_name='ID заказа в сервисе')),
                ('price', models.FloatField(verbose_name='Общая цена заказа')),
                ('quantity', models.IntegerField(verbose_name='Кол-во услуг')),
                ('link', models.URLField(verbose_name='Адрес целевой страницы (ссылка на фото, профиль, видео) ')),
                ('status', models.CharField(max_length=16, verbose_name='Статус заказа')),
            ],
        ),
        migrations.CreateModel(
            name='Type_API',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название типа API')),
                ('API_url', models.URLField(verbose_name='API url')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(verbose_name='ID пользователя')),
                ('balance', models.IntegerField(default=0, verbose_name='Баланс')),
                ('money_earned', models.IntegerField(default=0, verbose_name='Денег заработано')),
                ('pay_balanse', models.BooleanField(default=False, verbose_name='Пополняет ли пользователь баланс')),
                ('last_pay_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='Последний ID платежа')),
                ('channel_and_group', models.ManyToManyField(to='Models.groupandchennel', verbose_name='Группы и чаты пользователя')),
                ('invited_users', models.ManyToManyField(blank=True, null=True, related_name='invited_user', to='Models.user', verbose_name='Приглашенные пользователи')),
                ('inviting_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inviting', to='Models.user', verbose_name='Пригласивший пользователь')),
                ('orders', models.ManyToManyField(blank=True, null=True, related_name='order', to='Models.orders', verbose_name='Заказы')),
            ],
        ),
        migrations.CreateModel(
            name='Receipts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Имя чека')),
                ('price', models.FloatField(verbose_name='Сумма чека')),
                ('number', models.IntegerField(default=1, verbose_name='Колличество пользховаетлей, которым можно отправить чек')),
                ('group_or_channels', models.ManyToManyField(null=True, to='Models.groupandchennel', verbose_name='Группы и чаты для проверки')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='Models.user', verbose_name='Создатель чека')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servis_id', models.IntegerField(verbose_name='ID услуги в сервисе')),
                ('name', models.CharField(max_length=64, verbose_name='Название товара')),
                ('description', models.CharField(max_length=128, verbose_name='Описание товара')),
                ('price', models.FloatField(verbose_name='Цена товара')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api', to='Models.api', verbose_name='')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='Models.category', verbose_name='Категория товара')),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='Models.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='api',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_type', to='Models.type_api', verbose_name='Тип API'),
        ),
    ]
